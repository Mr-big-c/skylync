// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skylync.proto

#include "skylync.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace skylync {
class ContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Context>
      _instance;
} _Context_default_instance_;
class AttachParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttachParams>
      _instance;
} _AttachParams_default_instance_;
class DeviceIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceId>
      _instance;
} _DeviceId_default_instance_;
class DeviceListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceList>
      _instance;
} _DeviceList_default_instance_;
class OperationParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationParams>
      _instance;
} _OperationParams_default_instance_;
class ChannelParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelParams>
      _instance;
} _ChannelParams_default_instance_;
class ChannelValidationParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelValidationParams>
      _instance;
} _ChannelValidationParams_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message>
      _instance;
} _Message_default_instance_;
class EndpointMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EndpointMessage>
      _instance;
} _EndpointMessage_default_instance_;
class BridgeMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeMessage>
      _instance;
} _BridgeMessage_default_instance_;
}  // namespace skylync
namespace protobuf_skylync_2eproto {
void InitDefaultsContextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::skylync::_Context_default_instance_;
    new (ptr) ::skylync::Context();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::skylync::Context::InitAsDefaultInstance();
}

void InitDefaultsContext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContextImpl);
}

void InitDefaultsAttachParamsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::skylync::_AttachParams_default_instance_;
    new (ptr) ::skylync::AttachParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::skylync::AttachParams::InitAsDefaultInstance();
}

void InitDefaultsAttachParams() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAttachParamsImpl);
}

void InitDefaultsDeviceIdImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::skylync::_DeviceId_default_instance_;
    new (ptr) ::skylync::DeviceId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::skylync::DeviceId::InitAsDefaultInstance();
}

void InitDefaultsDeviceId() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceIdImpl);
}

void InitDefaultsDeviceListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_skylync_2eproto::InitDefaultsDeviceId();
  {
    void* ptr = &::skylync::_DeviceList_default_instance_;
    new (ptr) ::skylync::DeviceList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::skylync::DeviceList::InitAsDefaultInstance();
}

void InitDefaultsDeviceList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceListImpl);
}

void InitDefaultsOperationParamsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::skylync::_OperationParams_default_instance_;
    new (ptr) ::skylync::OperationParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::skylync::OperationParams::InitAsDefaultInstance();
}

void InitDefaultsOperationParams() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOperationParamsImpl);
}

void InitDefaultsChannelParamsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::skylync::_ChannelParams_default_instance_;
    new (ptr) ::skylync::ChannelParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::skylync::ChannelParams::InitAsDefaultInstance();
}

void InitDefaultsChannelParams() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChannelParamsImpl);
}

void InitDefaultsChannelValidationParamsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::skylync::_ChannelValidationParams_default_instance_;
    new (ptr) ::skylync::ChannelValidationParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::skylync::ChannelValidationParams::InitAsDefaultInstance();
}

void InitDefaultsChannelValidationParams() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChannelValidationParamsImpl);
}

void InitDefaultsMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::skylync::_Message_default_instance_;
    new (ptr) ::skylync::Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::skylync::Message::InitAsDefaultInstance();
}

void InitDefaultsMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageImpl);
}

void InitDefaultsEndpointMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_skylync_2eproto::InitDefaultsMessage();
  protobuf_skylync_2eproto::InitDefaultsAttachParams();
  protobuf_skylync_2eproto::InitDefaultsContext();
  protobuf_skylync_2eproto::InitDefaultsOperationParams();
  protobuf_skylync_2eproto::InitDefaultsChannelParams();
  {
    void* ptr = &::skylync::_EndpointMessage_default_instance_;
    new (ptr) ::skylync::EndpointMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::skylync::EndpointMessage::InitAsDefaultInstance();
}

void InitDefaultsEndpointMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEndpointMessageImpl);
}

void InitDefaultsBridgeMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_skylync_2eproto::InitDefaultsMessage();
  protobuf_skylync_2eproto::InitDefaultsContext();
  protobuf_skylync_2eproto::InitDefaultsDeviceList();
  protobuf_skylync_2eproto::InitDefaultsChannelParams();
  protobuf_skylync_2eproto::InitDefaultsChannelValidationParams();
  {
    void* ptr = &::skylync::_BridgeMessage_default_instance_;
    new (ptr) ::skylync::BridgeMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::skylync::BridgeMessage::InitAsDefaultInstance();
}

void InitDefaultsBridgeMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBridgeMessageImpl);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::Context, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::Context, refid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::AttachParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::AttachParams, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::AttachParams, pwd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::DeviceId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::DeviceId, ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::DeviceId, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::DeviceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::DeviceList, devices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::OperationParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::OperationParams, refid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::ChannelParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::ChannelParams, channelid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::ChannelValidationParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::ChannelValidationParams, channelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::ChannelValidationParams, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::ChannelValidationParams, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::Message, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::Message, responsefor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::Message, cause_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::Message, note_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::EndpointMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::EndpointMessage, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::EndpointMessage, attachparams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::EndpointMessage, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::EndpointMessage, operationparams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::EndpointMessage, channelparams_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::BridgeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::BridgeMessage, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::BridgeMessage, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::BridgeMessage, devicelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::BridgeMessage, channelparams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::skylync::BridgeMessage, channelvalidationparams_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::skylync::Context)},
  { 6, -1, sizeof(::skylync::AttachParams)},
  { 13, -1, sizeof(::skylync::DeviceId)},
  { 20, -1, sizeof(::skylync::DeviceList)},
  { 26, -1, sizeof(::skylync::OperationParams)},
  { 32, -1, sizeof(::skylync::ChannelParams)},
  { 38, -1, sizeof(::skylync::ChannelValidationParams)},
  { 46, -1, sizeof(::skylync::Message)},
  { 55, -1, sizeof(::skylync::EndpointMessage)},
  { 65, -1, sizeof(::skylync::BridgeMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::skylync::_Context_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::skylync::_AttachParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::skylync::_DeviceId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::skylync::_DeviceList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::skylync::_OperationParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::skylync::_ChannelParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::skylync::_ChannelValidationParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::skylync::_Message_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::skylync::_EndpointMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::skylync::_BridgeMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "skylync.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rskylync.proto\022\007skylync\"\030\n\007Context\022\r\n\005r"
      "efId\030\001 \001(\004\"\'\n\014AttachParams\022\n\n\002id\030\001 \001(\t\022\013"
      "\n\003pwd\030\002 \001(\t\"%\n\010DeviceId\022\013\n\003ref\030\001 \001(\004\022\014\n\004"
      "name\030\002 \001(\t\"0\n\nDeviceList\022\"\n\007devices\030\001 \003("
      "\0132\021.skylync.DeviceId\" \n\017OperationParams\022"
      "\r\n\005refId\030\001 \001(\004\"\"\n\rChannelParams\022\021\n\tchann"
      "elId\030\001 \001(\r\"G\n\027ChannelValidationParams\022\021\n"
      "\tchannelId\030\001 \001(\r\022\014\n\004port\030\002 \001(\r\022\013\n\003key\030\003 "
      "\001(\014\"\261\005\n\007Message\022)\n\007command\030\001 \001(\0162\030.skyly"
      "nc.Message.Command\022-\n\013responseFor\030\002 \001(\0162"
      "\030.skylync.Message.Command\022%\n\005cause\030\003 \001(\016"
      "2\026.skylync.Message.Cause\022\014\n\004note\030\004 \001(\t\"\263"
      "\002\n\007Command\022\023\n\017UNKNOWN_COMMAND\020\000\022\n\n\006ACCEP"
      "T\020\001\022\n\n\006REJECT\020\002\022\n\n\006ATTACH\020\003\022\013\n\007RELEASE\020\004"
      "\022\022\n\016CONTEXT_UPDATE\020\005\022\017\n\013DEVICE_LIST\020\006\022\021\n"
      "\rDEVICE_STATUS\020\007\022\030\n\024DEVICE_UPDATE_STATUS"
      "\020\010\022\025\n\021OPERATION_REQUEST\020\t\022\026\n\022OPERATION_T"
      "EARDOWN\020\n\022\025\n\021OPERATION_STARTED\020\013\022\022\n\016TUNN"
      "EL_REQUEST\020\014\022\020\n\014CHANNEL_OPEN\020\r\022\024\n\020CHANNE"
      "L_VALIDATE\020\016\022\016\n\nHO_REQUEST\020\017\"\340\001\n\005Cause\022\021"
      "\n\rUNKNOWN_CAUSE\020\000\022\014\n\010BAD_DATA\020\001\022\022\n\016INTER"
      "NAL_ERROR\020\002\022\r\n\tNOT_FOUND\020\003\022\020\n\014UNAUTHORIZ"
      "ED\020\004\022\010\n\004BUSY\020\005\022\016\n\nBAD_DEVICE\020\006\022\017\n\013NOT_CA"
      "PABLE\020\007\022\t\n\005NOTED\020\010\022\013\n\007BLOCKED\020\t\022\023\n\017ALLRE"
      "ADY_IN_USE\020\n\022\016\n\nOVERLOADED\020\013\022\031\n\025AUTHENTI"
      "CATION_FAILED\020\014\"\343\001\n\017EndpointMessage\022\036\n\004b"
      "ase\030\001 \001(\0132\020.skylync.Message\022+\n\014attachPar"
      "ams\030\002 \001(\0132\025.skylync.AttachParams\022!\n\007cont"
      "ext\030\003 \001(\0132\020.skylync.Context\0221\n\017operation"
      "Params\030\004 \001(\0132\030.skylync.OperationParams\022-"
      "\n\rchannelParams\030\005 \001(\0132\026.skylync.ChannelP"
      "arams\"\355\001\n\rBridgeMessage\022\036\n\004base\030\001 \001(\0132\020."
      "skylync.Message\022!\n\007context\030\002 \001(\0132\020.skyly"
      "nc.Context\022\'\n\ndeviceList\030\003 \001(\0132\023.skylync"
      ".DeviceList\022-\n\rchannelParams\030\005 \001(\0132\026.sky"
      "lync.ChannelParams\022A\n\027channelValidationP"
      "arams\030\006 \001(\0132 .skylync.ChannelValidationP"
      "aramsb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1493);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "skylync.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_skylync_2eproto
namespace skylync {
const ::google::protobuf::EnumDescriptor* Message_Command_descriptor() {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_skylync_2eproto::file_level_enum_descriptors[0];
}
bool Message_Command_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Message_Command Message::UNKNOWN_COMMAND;
const Message_Command Message::ACCEPT;
const Message_Command Message::REJECT;
const Message_Command Message::ATTACH;
const Message_Command Message::RELEASE;
const Message_Command Message::CONTEXT_UPDATE;
const Message_Command Message::DEVICE_LIST;
const Message_Command Message::DEVICE_STATUS;
const Message_Command Message::DEVICE_UPDATE_STATUS;
const Message_Command Message::OPERATION_REQUEST;
const Message_Command Message::OPERATION_TEARDOWN;
const Message_Command Message::OPERATION_STARTED;
const Message_Command Message::TUNNEL_REQUEST;
const Message_Command Message::CHANNEL_OPEN;
const Message_Command Message::CHANNEL_VALIDATE;
const Message_Command Message::HO_REQUEST;
const Message_Command Message::Command_MIN;
const Message_Command Message::Command_MAX;
const int Message::Command_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Message_Cause_descriptor() {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_skylync_2eproto::file_level_enum_descriptors[1];
}
bool Message_Cause_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Message_Cause Message::UNKNOWN_CAUSE;
const Message_Cause Message::BAD_DATA;
const Message_Cause Message::INTERNAL_ERROR;
const Message_Cause Message::NOT_FOUND;
const Message_Cause Message::UNAUTHORIZED;
const Message_Cause Message::BUSY;
const Message_Cause Message::BAD_DEVICE;
const Message_Cause Message::NOT_CAPABLE;
const Message_Cause Message::NOTED;
const Message_Cause Message::BLOCKED;
const Message_Cause Message::ALLREADY_IN_USE;
const Message_Cause Message::OVERLOADED;
const Message_Cause Message::AUTHENTICATION_FAILED;
const Message_Cause Message::Cause_MIN;
const Message_Cause Message::Cause_MAX;
const int Message::Cause_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Context::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Context::kRefIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Context::Context()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_skylync_2eproto::InitDefaultsContext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skylync.Context)
}
Context::Context(const Context& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  refid_ = from.refid_;
  // @@protoc_insertion_point(copy_constructor:skylync.Context)
}

void Context::SharedCtor() {
  refid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Context::~Context() {
  // @@protoc_insertion_point(destructor:skylync.Context)
  SharedDtor();
}

void Context::SharedDtor() {
}

void Context::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Context::descriptor() {
  ::protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Context& Context::default_instance() {
  ::protobuf_skylync_2eproto::InitDefaultsContext();
  return *internal_default_instance();
}

Context* Context::New(::google::protobuf::Arena* arena) const {
  Context* n = new Context;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Context::Clear() {
// @@protoc_insertion_point(message_clear_start:skylync.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  refid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Context::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skylync.Context)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 refId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skylync.Context)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skylync.Context)
  return false;
#undef DO_
}

void Context::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skylync.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 refId = 1;
  if (this->refid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->refid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:skylync.Context)
}

::google::protobuf::uint8* Context::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skylync.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 refId = 1;
  if (this->refid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->refid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skylync.Context)
  return target;
}

size_t Context::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skylync.Context)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 refId = 1;
  if (this->refid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->refid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Context::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skylync.Context)
  GOOGLE_DCHECK_NE(&from, this);
  const Context* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Context>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skylync.Context)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skylync.Context)
    MergeFrom(*source);
  }
}

void Context::MergeFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skylync.Context)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.refid() != 0) {
    set_refid(from.refid());
  }
}

void Context::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skylync.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Context::CopyFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skylync.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Context::IsInitialized() const {
  return true;
}

void Context::Swap(Context* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Context::InternalSwap(Context* other) {
  using std::swap;
  swap(refid_, other->refid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Context::GetMetadata() const {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttachParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttachParams::kIdFieldNumber;
const int AttachParams::kPwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttachParams::AttachParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_skylync_2eproto::InitDefaultsAttachParams();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skylync.AttachParams)
}
AttachParams::AttachParams(const AttachParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pwd().size() > 0) {
    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  // @@protoc_insertion_point(copy_constructor:skylync.AttachParams)
}

void AttachParams::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AttachParams::~AttachParams() {
  // @@protoc_insertion_point(destructor:skylync.AttachParams)
  SharedDtor();
}

void AttachParams::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttachParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttachParams::descriptor() {
  ::protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttachParams& AttachParams::default_instance() {
  ::protobuf_skylync_2eproto::InitDefaultsAttachParams();
  return *internal_default_instance();
}

AttachParams* AttachParams::New(::google::protobuf::Arena* arena) const {
  AttachParams* n = new AttachParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttachParams::Clear() {
// @@protoc_insertion_point(message_clear_start:skylync.AttachParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AttachParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skylync.AttachParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "skylync.AttachParams.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), static_cast<int>(this->pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "skylync.AttachParams.pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skylync.AttachParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skylync.AttachParams)
  return false;
#undef DO_
}

void AttachParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skylync.AttachParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skylync.AttachParams.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skylync.AttachParams.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pwd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:skylync.AttachParams)
}

::google::protobuf::uint8* AttachParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skylync.AttachParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skylync.AttachParams.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skylync.AttachParams.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pwd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skylync.AttachParams)
  return target;
}

size_t AttachParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skylync.AttachParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string pwd = 2;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttachParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skylync.AttachParams)
  GOOGLE_DCHECK_NE(&from, this);
  const AttachParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttachParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skylync.AttachParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skylync.AttachParams)
    MergeFrom(*source);
  }
}

void AttachParams::MergeFrom(const AttachParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skylync.AttachParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
}

void AttachParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skylync.AttachParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachParams::CopyFrom(const AttachParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skylync.AttachParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachParams::IsInitialized() const {
  return true;
}

void AttachParams::Swap(AttachParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttachParams::InternalSwap(AttachParams* other) {
  using std::swap;
  id_.Swap(&other->id_);
  pwd_.Swap(&other->pwd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttachParams::GetMetadata() const {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceId::kRefFieldNumber;
const int DeviceId::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceId::DeviceId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_skylync_2eproto::InitDefaultsDeviceId();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skylync.DeviceId)
}
DeviceId::DeviceId(const DeviceId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ref_ = from.ref_;
  // @@protoc_insertion_point(copy_constructor:skylync.DeviceId)
}

void DeviceId::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

DeviceId::~DeviceId() {
  // @@protoc_insertion_point(destructor:skylync.DeviceId)
  SharedDtor();
}

void DeviceId::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceId::descriptor() {
  ::protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceId& DeviceId::default_instance() {
  ::protobuf_skylync_2eproto::InitDefaultsDeviceId();
  return *internal_default_instance();
}

DeviceId* DeviceId::New(::google::protobuf::Arena* arena) const {
  DeviceId* n = new DeviceId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceId::Clear() {
// @@protoc_insertion_point(message_clear_start:skylync.DeviceId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool DeviceId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skylync.DeviceId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "skylync.DeviceId.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skylync.DeviceId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skylync.DeviceId)
  return false;
#undef DO_
}

void DeviceId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skylync.DeviceId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ref = 1;
  if (this->ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ref(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skylync.DeviceId.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:skylync.DeviceId)
}

::google::protobuf::uint8* DeviceId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skylync.DeviceId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ref = 1;
  if (this->ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ref(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skylync.DeviceId.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skylync.DeviceId)
  return target;
}

size_t DeviceId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skylync.DeviceId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 ref = 1;
  if (this->ref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skylync.DeviceId)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skylync.DeviceId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skylync.DeviceId)
    MergeFrom(*source);
  }
}

void DeviceId::MergeFrom(const DeviceId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skylync.DeviceId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.ref() != 0) {
    set_ref(from.ref());
  }
}

void DeviceId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skylync.DeviceId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceId::CopyFrom(const DeviceId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skylync.DeviceId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceId::IsInitialized() const {
  return true;
}

void DeviceId::Swap(DeviceId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceId::InternalSwap(DeviceId* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(ref_, other->ref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceId::GetMetadata() const {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceList::kDevicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceList::DeviceList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_skylync_2eproto::InitDefaultsDeviceList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skylync.DeviceList)
}
DeviceList::DeviceList(const DeviceList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devices_(from.devices_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:skylync.DeviceList)
}

void DeviceList::SharedCtor() {
  _cached_size_ = 0;
}

DeviceList::~DeviceList() {
  // @@protoc_insertion_point(destructor:skylync.DeviceList)
  SharedDtor();
}

void DeviceList::SharedDtor() {
}

void DeviceList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceList::descriptor() {
  ::protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceList& DeviceList::default_instance() {
  ::protobuf_skylync_2eproto::InitDefaultsDeviceList();
  return *internal_default_instance();
}

DeviceList* DeviceList::New(::google::protobuf::Arena* arena) const {
  DeviceList* n = new DeviceList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceList::Clear() {
// @@protoc_insertion_point(message_clear_start:skylync.DeviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devices_.Clear();
  _internal_metadata_.Clear();
}

bool DeviceList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skylync.DeviceList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .skylync.DeviceId devices = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skylync.DeviceList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skylync.DeviceList)
  return false;
#undef DO_
}

void DeviceList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skylync.DeviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .skylync.DeviceId devices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->devices(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:skylync.DeviceList)
}

::google::protobuf::uint8* DeviceList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skylync.DeviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .skylync.DeviceId devices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->devices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skylync.DeviceList)
  return target;
}

size_t DeviceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skylync.DeviceList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .skylync.DeviceId devices = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devices(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skylync.DeviceList)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skylync.DeviceList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skylync.DeviceList)
    MergeFrom(*source);
  }
}

void DeviceList::MergeFrom(const DeviceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skylync.DeviceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devices_.MergeFrom(from.devices_);
}

void DeviceList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skylync.DeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceList::CopyFrom(const DeviceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skylync.DeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceList::IsInitialized() const {
  return true;
}

void DeviceList::Swap(DeviceList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceList::InternalSwap(DeviceList* other) {
  using std::swap;
  devices_.InternalSwap(&other->devices_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceList::GetMetadata() const {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationParams::kRefIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationParams::OperationParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_skylync_2eproto::InitDefaultsOperationParams();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skylync.OperationParams)
}
OperationParams::OperationParams(const OperationParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  refid_ = from.refid_;
  // @@protoc_insertion_point(copy_constructor:skylync.OperationParams)
}

void OperationParams::SharedCtor() {
  refid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

OperationParams::~OperationParams() {
  // @@protoc_insertion_point(destructor:skylync.OperationParams)
  SharedDtor();
}

void OperationParams::SharedDtor() {
}

void OperationParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperationParams::descriptor() {
  ::protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationParams& OperationParams::default_instance() {
  ::protobuf_skylync_2eproto::InitDefaultsOperationParams();
  return *internal_default_instance();
}

OperationParams* OperationParams::New(::google::protobuf::Arena* arena) const {
  OperationParams* n = new OperationParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperationParams::Clear() {
// @@protoc_insertion_point(message_clear_start:skylync.OperationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  refid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool OperationParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skylync.OperationParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 refId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skylync.OperationParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skylync.OperationParams)
  return false;
#undef DO_
}

void OperationParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skylync.OperationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 refId = 1;
  if (this->refid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->refid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:skylync.OperationParams)
}

::google::protobuf::uint8* OperationParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skylync.OperationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 refId = 1;
  if (this->refid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->refid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skylync.OperationParams)
  return target;
}

size_t OperationParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skylync.OperationParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 refId = 1;
  if (this->refid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->refid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperationParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skylync.OperationParams)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skylync.OperationParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skylync.OperationParams)
    MergeFrom(*source);
  }
}

void OperationParams::MergeFrom(const OperationParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skylync.OperationParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.refid() != 0) {
    set_refid(from.refid());
  }
}

void OperationParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skylync.OperationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationParams::CopyFrom(const OperationParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skylync.OperationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationParams::IsInitialized() const {
  return true;
}

void OperationParams::Swap(OperationParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationParams::InternalSwap(OperationParams* other) {
  using std::swap;
  swap(refid_, other->refid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperationParams::GetMetadata() const {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChannelParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelParams::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelParams::ChannelParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_skylync_2eproto::InitDefaultsChannelParams();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skylync.ChannelParams)
}
ChannelParams::ChannelParams(const ChannelParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channelid_ = from.channelid_;
  // @@protoc_insertion_point(copy_constructor:skylync.ChannelParams)
}

void ChannelParams::SharedCtor() {
  channelid_ = 0u;
  _cached_size_ = 0;
}

ChannelParams::~ChannelParams() {
  // @@protoc_insertion_point(destructor:skylync.ChannelParams)
  SharedDtor();
}

void ChannelParams::SharedDtor() {
}

void ChannelParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChannelParams::descriptor() {
  ::protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelParams& ChannelParams::default_instance() {
  ::protobuf_skylync_2eproto::InitDefaultsChannelParams();
  return *internal_default_instance();
}

ChannelParams* ChannelParams::New(::google::protobuf::Arena* arena) const {
  ChannelParams* n = new ChannelParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChannelParams::Clear() {
// @@protoc_insertion_point(message_clear_start:skylync.ChannelParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channelid_ = 0u;
  _internal_metadata_.Clear();
}

bool ChannelParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skylync.ChannelParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channelId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skylync.ChannelParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skylync.ChannelParams)
  return false;
#undef DO_
}

void ChannelParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skylync.ChannelParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channelId = 1;
  if (this->channelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channelid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:skylync.ChannelParams)
}

::google::protobuf::uint8* ChannelParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skylync.ChannelParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channelId = 1;
  if (this->channelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channelid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skylync.ChannelParams)
  return target;
}

size_t ChannelParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skylync.ChannelParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 channelId = 1;
  if (this->channelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channelid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChannelParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skylync.ChannelParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skylync.ChannelParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skylync.ChannelParams)
    MergeFrom(*source);
  }
}

void ChannelParams::MergeFrom(const ChannelParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skylync.ChannelParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channelid() != 0) {
    set_channelid(from.channelid());
  }
}

void ChannelParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skylync.ChannelParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelParams::CopyFrom(const ChannelParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skylync.ChannelParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelParams::IsInitialized() const {
  return true;
}

void ChannelParams::Swap(ChannelParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChannelParams::InternalSwap(ChannelParams* other) {
  using std::swap;
  swap(channelid_, other->channelid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChannelParams::GetMetadata() const {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChannelValidationParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelValidationParams::kChannelIdFieldNumber;
const int ChannelValidationParams::kPortFieldNumber;
const int ChannelValidationParams::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelValidationParams::ChannelValidationParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_skylync_2eproto::InitDefaultsChannelValidationParams();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skylync.ChannelValidationParams)
}
ChannelValidationParams::ChannelValidationParams(const ChannelValidationParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&channelid_, &from.channelid_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&channelid_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:skylync.ChannelValidationParams)
}

void ChannelValidationParams::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channelid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&channelid_)) + sizeof(port_));
  _cached_size_ = 0;
}

ChannelValidationParams::~ChannelValidationParams() {
  // @@protoc_insertion_point(destructor:skylync.ChannelValidationParams)
  SharedDtor();
}

void ChannelValidationParams::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChannelValidationParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChannelValidationParams::descriptor() {
  ::protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelValidationParams& ChannelValidationParams::default_instance() {
  ::protobuf_skylync_2eproto::InitDefaultsChannelValidationParams();
  return *internal_default_instance();
}

ChannelValidationParams* ChannelValidationParams::New(::google::protobuf::Arena* arena) const {
  ChannelValidationParams* n = new ChannelValidationParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChannelValidationParams::Clear() {
// @@protoc_insertion_point(message_clear_start:skylync.ChannelValidationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channelid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&channelid_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool ChannelValidationParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skylync.ChannelValidationParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channelId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skylync.ChannelValidationParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skylync.ChannelValidationParams)
  return false;
#undef DO_
}

void ChannelValidationParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skylync.ChannelValidationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channelId = 1;
  if (this->channelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channelid(), output);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:skylync.ChannelValidationParams)
}

::google::protobuf::uint8* ChannelValidationParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skylync.ChannelValidationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channelId = 1;
  if (this->channelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channelid(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skylync.ChannelValidationParams)
  return target;
}

size_t ChannelValidationParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skylync.ChannelValidationParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // uint32 channelId = 1;
  if (this->channelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channelid());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChannelValidationParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skylync.ChannelValidationParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelValidationParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelValidationParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skylync.ChannelValidationParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skylync.ChannelValidationParams)
    MergeFrom(*source);
  }
}

void ChannelValidationParams::MergeFrom(const ChannelValidationParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skylync.ChannelValidationParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.channelid() != 0) {
    set_channelid(from.channelid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void ChannelValidationParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skylync.ChannelValidationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelValidationParams::CopyFrom(const ChannelValidationParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skylync.ChannelValidationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelValidationParams::IsInitialized() const {
  return true;
}

void ChannelValidationParams::Swap(ChannelValidationParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChannelValidationParams::InternalSwap(ChannelValidationParams* other) {
  using std::swap;
  key_.Swap(&other->key_);
  swap(channelid_, other->channelid_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChannelValidationParams::GetMetadata() const {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kCommandFieldNumber;
const int Message::kResponseForFieldNumber;
const int Message::kCauseFieldNumber;
const int Message::kNoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_skylync_2eproto::InitDefaultsMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skylync.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  note_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.note().size() > 0) {
    note_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_);
  }
  ::memcpy(&command_, &from.command_,
    static_cast<size_t>(reinterpret_cast<char*>(&cause_) -
    reinterpret_cast<char*>(&command_)) + sizeof(cause_));
  // @@protoc_insertion_point(copy_constructor:skylync.Message)
}

void Message::SharedCtor() {
  note_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cause_) -
      reinterpret_cast<char*>(&command_)) + sizeof(cause_));
  _cached_size_ = 0;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:skylync.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  note_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  ::protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  ::protobuf_skylync_2eproto::InitDefaultsMessage();
  return *internal_default_instance();
}

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:skylync.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  note_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cause_) -
      reinterpret_cast<char*>(&command_)) + sizeof(cause_));
  _internal_metadata_.Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skylync.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .skylync.Message.Command command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_command(static_cast< ::skylync::Message_Command >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skylync.Message.Command responseFor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_responsefor(static_cast< ::skylync::Message_Command >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skylync.Message.Cause cause = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cause(static_cast< ::skylync::Message_Cause >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string note = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_note()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->note().data(), static_cast<int>(this->note().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "skylync.Message.note"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skylync.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skylync.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skylync.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .skylync.Message.Command command = 1;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->command(), output);
  }

  // .skylync.Message.Command responseFor = 2;
  if (this->responsefor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->responsefor(), output);
  }

  // .skylync.Message.Cause cause = 3;
  if (this->cause() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->cause(), output);
  }

  // string note = 4;
  if (this->note().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note().data(), static_cast<int>(this->note().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skylync.Message.note");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->note(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:skylync.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skylync.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .skylync.Message.Command command = 1;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->command(), target);
  }

  // .skylync.Message.Command responseFor = 2;
  if (this->responsefor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->responsefor(), target);
  }

  // .skylync.Message.Cause cause = 3;
  if (this->cause() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->cause(), target);
  }

  // string note = 4;
  if (this->note().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note().data(), static_cast<int>(this->note().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skylync.Message.note");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->note(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skylync.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skylync.Message)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string note = 4;
  if (this->note().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->note());
  }

  // .skylync.Message.Command command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());
  }

  // .skylync.Message.Command responseFor = 2;
  if (this->responsefor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->responsefor());
  }

  // .skylync.Message.Cause cause = 3;
  if (this->cause() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cause());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skylync.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skylync.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skylync.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skylync.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.note().size() > 0) {

    note_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_);
  }
  if (from.command() != 0) {
    set_command(from.command());
  }
  if (from.responsefor() != 0) {
    set_responsefor(from.responsefor());
  }
  if (from.cause() != 0) {
    set_cause(from.cause());
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skylync.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skylync.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  using std::swap;
  note_.Swap(&other->note_);
  swap(command_, other->command_);
  swap(responsefor_, other->responsefor_);
  swap(cause_, other->cause_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EndpointMessage::InitAsDefaultInstance() {
  ::skylync::_EndpointMessage_default_instance_._instance.get_mutable()->base_ = const_cast< ::skylync::Message*>(
      ::skylync::Message::internal_default_instance());
  ::skylync::_EndpointMessage_default_instance_._instance.get_mutable()->attachparams_ = const_cast< ::skylync::AttachParams*>(
      ::skylync::AttachParams::internal_default_instance());
  ::skylync::_EndpointMessage_default_instance_._instance.get_mutable()->context_ = const_cast< ::skylync::Context*>(
      ::skylync::Context::internal_default_instance());
  ::skylync::_EndpointMessage_default_instance_._instance.get_mutable()->operationparams_ = const_cast< ::skylync::OperationParams*>(
      ::skylync::OperationParams::internal_default_instance());
  ::skylync::_EndpointMessage_default_instance_._instance.get_mutable()->channelparams_ = const_cast< ::skylync::ChannelParams*>(
      ::skylync::ChannelParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndpointMessage::kBaseFieldNumber;
const int EndpointMessage::kAttachParamsFieldNumber;
const int EndpointMessage::kContextFieldNumber;
const int EndpointMessage::kOperationParamsFieldNumber;
const int EndpointMessage::kChannelParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndpointMessage::EndpointMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_skylync_2eproto::InitDefaultsEndpointMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skylync.EndpointMessage)
}
EndpointMessage::EndpointMessage(const EndpointMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_base()) {
    base_ = new ::skylync::Message(*from.base_);
  } else {
    base_ = NULL;
  }
  if (from.has_attachparams()) {
    attachparams_ = new ::skylync::AttachParams(*from.attachparams_);
  } else {
    attachparams_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::skylync::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_operationparams()) {
    operationparams_ = new ::skylync::OperationParams(*from.operationparams_);
  } else {
    operationparams_ = NULL;
  }
  if (from.has_channelparams()) {
    channelparams_ = new ::skylync::ChannelParams(*from.channelparams_);
  } else {
    channelparams_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:skylync.EndpointMessage)
}

void EndpointMessage::SharedCtor() {
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channelparams_) -
      reinterpret_cast<char*>(&base_)) + sizeof(channelparams_));
  _cached_size_ = 0;
}

EndpointMessage::~EndpointMessage() {
  // @@protoc_insertion_point(destructor:skylync.EndpointMessage)
  SharedDtor();
}

void EndpointMessage::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete attachparams_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete operationparams_;
  if (this != internal_default_instance()) delete channelparams_;
}

void EndpointMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndpointMessage::descriptor() {
  ::protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EndpointMessage& EndpointMessage::default_instance() {
  ::protobuf_skylync_2eproto::InitDefaultsEndpointMessage();
  return *internal_default_instance();
}

EndpointMessage* EndpointMessage::New(::google::protobuf::Arena* arena) const {
  EndpointMessage* n = new EndpointMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndpointMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:skylync.EndpointMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  if (GetArenaNoVirtual() == NULL && attachparams_ != NULL) {
    delete attachparams_;
  }
  attachparams_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && operationparams_ != NULL) {
    delete operationparams_;
  }
  operationparams_ = NULL;
  if (GetArenaNoVirtual() == NULL && channelparams_ != NULL) {
    delete channelparams_;
  }
  channelparams_ = NULL;
  _internal_metadata_.Clear();
}

bool EndpointMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skylync.EndpointMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .skylync.Message base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skylync.AttachParams attachParams = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skylync.Context context = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skylync.OperationParams operationParams = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operationparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skylync.ChannelParams channelParams = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_channelparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skylync.EndpointMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skylync.EndpointMessage)
  return false;
#undef DO_
}

void EndpointMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skylync.EndpointMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .skylync.Message base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->base_, output);
  }

  // .skylync.AttachParams attachParams = 2;
  if (this->has_attachparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->attachparams_, output);
  }

  // .skylync.Context context = 3;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->context_, output);
  }

  // .skylync.OperationParams operationParams = 4;
  if (this->has_operationparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->operationparams_, output);
  }

  // .skylync.ChannelParams channelParams = 5;
  if (this->has_channelparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->channelparams_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:skylync.EndpointMessage)
}

::google::protobuf::uint8* EndpointMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skylync.EndpointMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .skylync.Message base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->base_, deterministic, target);
  }

  // .skylync.AttachParams attachParams = 2;
  if (this->has_attachparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->attachparams_, deterministic, target);
  }

  // .skylync.Context context = 3;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->context_, deterministic, target);
  }

  // .skylync.OperationParams operationParams = 4;
  if (this->has_operationparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->operationparams_, deterministic, target);
  }

  // .skylync.ChannelParams channelParams = 5;
  if (this->has_channelparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->channelparams_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skylync.EndpointMessage)
  return target;
}

size_t EndpointMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skylync.EndpointMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .skylync.Message base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_);
  }

  // .skylync.AttachParams attachParams = 2;
  if (this->has_attachparams()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->attachparams_);
  }

  // .skylync.Context context = 3;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->context_);
  }

  // .skylync.OperationParams operationParams = 4;
  if (this->has_operationparams()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->operationparams_);
  }

  // .skylync.ChannelParams channelParams = 5;
  if (this->has_channelparams()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->channelparams_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndpointMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skylync.EndpointMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const EndpointMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndpointMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skylync.EndpointMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skylync.EndpointMessage)
    MergeFrom(*source);
  }
}

void EndpointMessage::MergeFrom(const EndpointMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skylync.EndpointMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_base()) {
    mutable_base()->::skylync::Message::MergeFrom(from.base());
  }
  if (from.has_attachparams()) {
    mutable_attachparams()->::skylync::AttachParams::MergeFrom(from.attachparams());
  }
  if (from.has_context()) {
    mutable_context()->::skylync::Context::MergeFrom(from.context());
  }
  if (from.has_operationparams()) {
    mutable_operationparams()->::skylync::OperationParams::MergeFrom(from.operationparams());
  }
  if (from.has_channelparams()) {
    mutable_channelparams()->::skylync::ChannelParams::MergeFrom(from.channelparams());
  }
}

void EndpointMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skylync.EndpointMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndpointMessage::CopyFrom(const EndpointMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skylync.EndpointMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndpointMessage::IsInitialized() const {
  return true;
}

void EndpointMessage::Swap(EndpointMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndpointMessage::InternalSwap(EndpointMessage* other) {
  using std::swap;
  swap(base_, other->base_);
  swap(attachparams_, other->attachparams_);
  swap(context_, other->context_);
  swap(operationparams_, other->operationparams_);
  swap(channelparams_, other->channelparams_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndpointMessage::GetMetadata() const {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeMessage::InitAsDefaultInstance() {
  ::skylync::_BridgeMessage_default_instance_._instance.get_mutable()->base_ = const_cast< ::skylync::Message*>(
      ::skylync::Message::internal_default_instance());
  ::skylync::_BridgeMessage_default_instance_._instance.get_mutable()->context_ = const_cast< ::skylync::Context*>(
      ::skylync::Context::internal_default_instance());
  ::skylync::_BridgeMessage_default_instance_._instance.get_mutable()->devicelist_ = const_cast< ::skylync::DeviceList*>(
      ::skylync::DeviceList::internal_default_instance());
  ::skylync::_BridgeMessage_default_instance_._instance.get_mutable()->channelparams_ = const_cast< ::skylync::ChannelParams*>(
      ::skylync::ChannelParams::internal_default_instance());
  ::skylync::_BridgeMessage_default_instance_._instance.get_mutable()->channelvalidationparams_ = const_cast< ::skylync::ChannelValidationParams*>(
      ::skylync::ChannelValidationParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeMessage::kBaseFieldNumber;
const int BridgeMessage::kContextFieldNumber;
const int BridgeMessage::kDeviceListFieldNumber;
const int BridgeMessage::kChannelParamsFieldNumber;
const int BridgeMessage::kChannelValidationParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeMessage::BridgeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_skylync_2eproto::InitDefaultsBridgeMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skylync.BridgeMessage)
}
BridgeMessage::BridgeMessage(const BridgeMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_base()) {
    base_ = new ::skylync::Message(*from.base_);
  } else {
    base_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::skylync::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_devicelist()) {
    devicelist_ = new ::skylync::DeviceList(*from.devicelist_);
  } else {
    devicelist_ = NULL;
  }
  if (from.has_channelparams()) {
    channelparams_ = new ::skylync::ChannelParams(*from.channelparams_);
  } else {
    channelparams_ = NULL;
  }
  if (from.has_channelvalidationparams()) {
    channelvalidationparams_ = new ::skylync::ChannelValidationParams(*from.channelvalidationparams_);
  } else {
    channelvalidationparams_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:skylync.BridgeMessage)
}

void BridgeMessage::SharedCtor() {
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channelvalidationparams_) -
      reinterpret_cast<char*>(&base_)) + sizeof(channelvalidationparams_));
  _cached_size_ = 0;
}

BridgeMessage::~BridgeMessage() {
  // @@protoc_insertion_point(destructor:skylync.BridgeMessage)
  SharedDtor();
}

void BridgeMessage::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete devicelist_;
  if (this != internal_default_instance()) delete channelparams_;
  if (this != internal_default_instance()) delete channelvalidationparams_;
}

void BridgeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BridgeMessage::descriptor() {
  ::protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeMessage& BridgeMessage::default_instance() {
  ::protobuf_skylync_2eproto::InitDefaultsBridgeMessage();
  return *internal_default_instance();
}

BridgeMessage* BridgeMessage::New(::google::protobuf::Arena* arena) const {
  BridgeMessage* n = new BridgeMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BridgeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:skylync.BridgeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && devicelist_ != NULL) {
    delete devicelist_;
  }
  devicelist_ = NULL;
  if (GetArenaNoVirtual() == NULL && channelparams_ != NULL) {
    delete channelparams_;
  }
  channelparams_ = NULL;
  if (GetArenaNoVirtual() == NULL && channelvalidationparams_ != NULL) {
    delete channelvalidationparams_;
  }
  channelvalidationparams_ = NULL;
  _internal_metadata_.Clear();
}

bool BridgeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skylync.BridgeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .skylync.Message base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skylync.Context context = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skylync.DeviceList deviceList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_devicelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skylync.ChannelParams channelParams = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_channelparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skylync.ChannelValidationParams channelValidationParams = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_channelvalidationparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skylync.BridgeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skylync.BridgeMessage)
  return false;
#undef DO_
}

void BridgeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skylync.BridgeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .skylync.Message base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->base_, output);
  }

  // .skylync.Context context = 2;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->context_, output);
  }

  // .skylync.DeviceList deviceList = 3;
  if (this->has_devicelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->devicelist_, output);
  }

  // .skylync.ChannelParams channelParams = 5;
  if (this->has_channelparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->channelparams_, output);
  }

  // .skylync.ChannelValidationParams channelValidationParams = 6;
  if (this->has_channelvalidationparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->channelvalidationparams_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:skylync.BridgeMessage)
}

::google::protobuf::uint8* BridgeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skylync.BridgeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .skylync.Message base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->base_, deterministic, target);
  }

  // .skylync.Context context = 2;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->context_, deterministic, target);
  }

  // .skylync.DeviceList deviceList = 3;
  if (this->has_devicelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->devicelist_, deterministic, target);
  }

  // .skylync.ChannelParams channelParams = 5;
  if (this->has_channelparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->channelparams_, deterministic, target);
  }

  // .skylync.ChannelValidationParams channelValidationParams = 6;
  if (this->has_channelvalidationparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->channelvalidationparams_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:skylync.BridgeMessage)
  return target;
}

size_t BridgeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skylync.BridgeMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .skylync.Message base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_);
  }

  // .skylync.Context context = 2;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->context_);
  }

  // .skylync.DeviceList deviceList = 3;
  if (this->has_devicelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->devicelist_);
  }

  // .skylync.ChannelParams channelParams = 5;
  if (this->has_channelparams()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->channelparams_);
  }

  // .skylync.ChannelValidationParams channelValidationParams = 6;
  if (this->has_channelvalidationparams()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->channelvalidationparams_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BridgeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skylync.BridgeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skylync.BridgeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skylync.BridgeMessage)
    MergeFrom(*source);
  }
}

void BridgeMessage::MergeFrom(const BridgeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skylync.BridgeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_base()) {
    mutable_base()->::skylync::Message::MergeFrom(from.base());
  }
  if (from.has_context()) {
    mutable_context()->::skylync::Context::MergeFrom(from.context());
  }
  if (from.has_devicelist()) {
    mutable_devicelist()->::skylync::DeviceList::MergeFrom(from.devicelist());
  }
  if (from.has_channelparams()) {
    mutable_channelparams()->::skylync::ChannelParams::MergeFrom(from.channelparams());
  }
  if (from.has_channelvalidationparams()) {
    mutable_channelvalidationparams()->::skylync::ChannelValidationParams::MergeFrom(from.channelvalidationparams());
  }
}

void BridgeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skylync.BridgeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeMessage::CopyFrom(const BridgeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skylync.BridgeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeMessage::IsInitialized() const {
  return true;
}

void BridgeMessage::Swap(BridgeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeMessage::InternalSwap(BridgeMessage* other) {
  using std::swap;
  swap(base_, other->base_);
  swap(context_, other->context_);
  swap(devicelist_, other->devicelist_);
  swap(channelparams_, other->channelparams_);
  swap(channelvalidationparams_, other->channelvalidationparams_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BridgeMessage::GetMetadata() const {
  protobuf_skylync_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_skylync_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace skylync

// @@protoc_insertion_point(global_scope)
